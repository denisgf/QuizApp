@model QuizViewModel
<form asp-action="PlayGame">
            
    <div class="title question">        
        @Model.QuestionStatement        
    </div>
    <div class="radioButtonsGroup">
        @foreach (string answer in @Model.Answers)
        {
            <div class="radioButton">
                <label>
                    <input type="radio"
                           name="response"
                           value="@answer"
                           id="response" @((Model.Responses[Model.CurrentQuestion] == answer) ? "checked=\"checked\"" : "") />@answer
                    </label>
            </div>
        }
    </div>
    <div class="button">
        <input type="submit"
                asp-action="PlayGame"
                asp-route-newGame="false"
                asp-route-currentQuestion="@Model.CurrentQuestion"
                asp-route-quizId="@Model.QuizId"
                asp-route-move="previous"
                disabled="@((Model.CurrentQuestion == 0) ? "disabled" : null )"
                value="Previous" />

        <input type="submit"
                asp-action="PlayGame"
                asp-route-newGame="false"
                asp-route-currentQuestion="@Model.CurrentQuestion"
                asp-route-quizId="@Model.QuizId"
                asp-route-move="next"
                disabled="@((Model.CurrentQuestion == Model.Responses.Count() - 1) ? "disabled" : null )"
                value="Next" />
        <input type="hidden" value="@Model.ResponsesToJson()" name="responses" />

        <input type="submit"
                asp-action="ShowStatistics"
                asp-route-quizId="@Model.QuizId"
                asp-route-currentQuestion="@Model.CurrentQuestion"
                value="Finish" />
    </div>            
    @*Question @(Model.CurrentQuestion + 1)/@Model.Responses.Count()*@
</form>
  
